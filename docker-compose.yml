version: "2.2"
networks:
    PetClinic:
services:
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    ports:
      - "8085:8080"
      - "50000:50000"
    networks:
      - PetClinic
    volumes:
      - /var/lib/docker/volumes/jenkins_home/_data:/var/jenkins_home
      - /usr/local/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mysql
    restart: always
  sonarqube:
    image: sonarqube
    container_name: sonarqube
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
      - "9092:9092"
    networks:
      - PetClinic
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_USER=petclinic
      - MYSQL_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    volumes:
      - "./conf.d:/etc/mysql/conf.d:ro"
  postgres:
    hostname: postgresql
    image: postgres:15.3
    ports:
      - "5432:5432"
    networks:
      - PetClinic
    environment:
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_USER=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_conf:
  sonarqube_logs:
  postgresql:
  postgresql_data:

